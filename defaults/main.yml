---

# Set `sshd_port` to a list of ports to listen on.
sshd_port:
  - 22

sshd_host_keys:
  - rsa
  - ecdsa
  - ed25519

# Set `sshd_listen_address` to a list of addresses. Defaults to all
# IPv4+IPv6 addresses if unset.
# sshd_listen_address: []
sshd_syslog_facility: AUTH
sshd_log_level: INFO
sshd_login_grace_time: "2m"
sshd_permit_root_login: "no"
sshd_strict_modes: "yes"
sshd_pubkey_authentication: "yes"
sshd_authorized_keys_file: ".ssh/authorized_keys"
sshd_password_authentication: "no"
sshd_allow_users: []
sshd_allow_groups: []
sshd_ignore_rhosts: "yes"
sshd_hostbased_authentication: "no"
sshd_permit_empty_passwords: "no"
sshd_challenge_response_authentication: "no"
sshd_kbd_interactive_authentication: "no"
sshd_x11_forwarding: "no"
sshd_x11_display_offset: 10
sshd_print_motd: "no"
sshd_print_last_log: "no"
sshd_tcp_keep_alive: "yes"
sshd_max_startups: "10:30:100"
sshd_client_alive_interval: 3600
sshd_client_alive_count_max: 3
sshd_use_pam: "yes"
sshd_use_dns: "no"
sshd_sftp_chroot: "no"
sshd_sftp_chroot_group: sftponly
sshd_sftp_chroot_directory: "%h"
sshd_stream_local_bind_unlink: "no"
sshd_allow_agent_forwarding: "no"
# manage authorized keys globally and exclusively
# when sshd_authorized_keys_file == "/etc/ssh/authorized_keys/%u"
# sshd_authorized_keys:
#   - user: username
#     key: ssh_rsa ...
#   - user: other_username
#     key:
#       - key1
#       - key2
#   - user: git
#     src: /var/opt/gitlab/.ssh/authorized_keys

sshd_header: "{{ lookup('vars', 'sshd_header_' + ansible_distribution_release, default=sshd_header_buster) }}"
